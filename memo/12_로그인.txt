프론트에서 saga => axios요청 ( email, password )
passport authenticate => local 전략

패스포트 로그인 시도 => 프론트에 응답
로그인 시 클라이언트 - 서버간 같은 정보를 
공유해야 함

브라우져에 이상한 랜덤 문자열을 보내줌 (쿠키)
서버에 유저의 인증 정보와 쿠키를 연결시켜놓는다.


쿠키를 봐도 정보를 추측 불가
브라우져는 요청할때마다 쿠키가 항상 딸려 보냄
백엔드는 그 쿠키를 보고 누구의 요청인지 안다.

근데 백엔드가 가진 정보가 너무 무겁다.
메모리를 좀먹는다. id만 서버에서 물고
있자. 쿠키에 id를 매칭시켜놓는다.

쿠키의 랜덤한 문자열은 유저정보를 기반으로
해슁한 값, 세션 키가 있으면 유저정보를 복원가능하다.
cookie - session간 같은 secret을 사용

환경변수 처리를 해야할 것이다.
npm install dotenv
코드상 노출을 막는다.
.env털리면 망하는건 마찬가지임


req.login
  패스포트 로그인, serializeUser가 실행된다.